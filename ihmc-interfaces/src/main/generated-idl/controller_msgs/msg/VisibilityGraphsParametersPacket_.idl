#ifndef __controller_msgs__msg__VisibilityGraphsParametersPacket__idl__
#define __controller_msgs__msg__VisibilityGraphsParametersPacket__idl__

module controller_msgs
{
  module msg
  {
    module dds
    {

      /**
       * This message is part of the IHMC footstep planning module.
       */
      @TypeCode(type="controller_msgs::msg::dds_::VisibilityGraphsParametersPacket_")
      struct VisibilityGraphsParametersPacket
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        @defaultValue(value=-1.0)
        double max_inter_region_connection_length;
        @defaultValue(value=-1.0)
        double normal_z_threshold_for_accessible_regions;
        @defaultValue(value=-1.0)
        double preferred_extrusion_distance;
        @defaultValue(value=-1.0)
        double extrusion_distance;
        @defaultValue(value=-1.0)
        double extrusion_distance_if_not_too_high_to_step;
        @defaultValue(value=-1.0)
        double too_high_to_step_distance;
        @defaultValue(value=-1.0)
        double cluster_resolution;
        @defaultValue(value=-1.0)
        double exploration_distance_from_start_goal;
        double planar_region_min_area;
        unsigned long planar_region_min_size;
        /**
         * Defines the angle from which two regions are considered orthogonal.
         * It is used to determine if a region should be projected onto another as a polygon or a line.
         * It should be close to 90 degrees.
         * Returns the angle threshold to use to determine if a line or polygon projection method should be used.
         */
        @defaultValue(value=-1.0)
        double region_orthogonal_angle;
        /**
         * This epsilon is is used when searching to which region the start/goal belongs to.
         * A positive value corresponds to growing all the regions before testing if the start/goal is inside.
         * Returns the value of the epsilon to use.
         */
        @defaultValue(value=0.03)
        double search_host_region_epsilon;
      };
    };
  };
};

#endif
