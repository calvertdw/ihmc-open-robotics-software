buildscript {
   repositories {
      mavenCentral()
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-release" }
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-vendor" }
      maven { url "https://plugins.gradle.org/m2/" }
      mavenLocal()
      jcenter()
   }
   dependencies {
      classpath "us.ihmc:ihmc-build:0.12.10"
//      classpath "us.ihmc:ros2-msg-to-pubsub-generator:0.2"
//      classpath "us.ihmc:ihmc-pub-sub-generator:0.3.7"
      classpath "org.ajoberstar:grgit:2.1.0"
      classpath "com.bmuschko:gradle-docker-plugin:3.2.5"
   }
}

apply plugin: "us.ihmc.ihmc-build"
apply plugin: "org.ajoberstar.grgit"
apply plugin: "com.bmuschko.docker-remote-api"

ihmc {
   loadProductProperties("../product.properties")

   configureDependencyResolution()
   resourceDirectory("main", "messages")
   resourceDirectory("main", "generated-idl")
   javaDirectory("main", "generated-java")
   resourceDirectory("generator", "docker")
   configurePublications()
}

testSuites {
   def prefix = "LIBS-IHMCOPENROBOTICSSOFTWARE"
   bambooPlanKeys = [prefix + "FAST", prefix + "INDEVELOPMENT", prefix + "UI", prefix + "VIDEO"]
}

mainDependencies {
   compile group: 'us.ihmc', name: 'euclid-core', version: '0.4.13'
   compile group: 'us.ihmc', name: 'euclid', version: '0.7.5'
   compile group: 'us.ihmc', name: 'ihmc-pub-sub', version: '0.6.0-alpha'
   compile group: 'us.ihmc', name: 'ros2-common-interfaces', version: '0.5.0-alpha'
}

testDependencies {
   compile group: 'us.ihmc', name: 'ihmc-ros2-library', version: '0.5.0-alpha'
}

generatorDependencies {
   compile group: "us.ihmc", name: "ihmc-commons", version: "0.18.0"
   compile group: "us.ihmc", name: "ros2-msg-to-pubsub-generator", version: "0.5.0-alpha"
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
   inputDir = file("src/generator/docker")
   tag = "ihmc/ros1-bridge-build"
}

//task unzipInterfaceDependencies() {
//      delete("build/tmp/generateMessages")
//
//      copy {
//         configurations.compile.findAll { it.name.contains("ros2-common-interfaces") }.each {
//            from zipTree(it)
//         }
//         into file("build/tmp/generateMessages/ros2-common-interfaces")
//      }
//}
//
//compileJava.dependsOn unzipInterfaceDependencies

task show() {
   doLast {
      project.gradle.includedBuilds.each { println it }
      buildscript.configurations.classpath.each { println "Buildscript: " + it }
      configurations.compile.each { println "Compile: " + it }
   }
}

//task generateMessages(type: us.ihmc.ros2.rosidl.RosInterfaceGeneratorTask) {
//   doFirst {
//      delete("build/tmp/generateMessages")
//
//      copy {
//         configurations.compile.findAll { it.name.contains("ros2-common-interfaces") }.each {
//            from zipTree(it)
//         }
//         into file("build/tmp/generateMessages/ros2-common-interfaces")
//      }
//   }
//
//   rosPackages = files("build/tmp/generateMessages/ros2-common-interfaces/rcl_interfaces",
//                       "build/tmp/generateMessages/ros2-common-interfaces/common_interfaces",
//                       "src/main/rosidl/ihmc_interfaces")
//   outputDirectory = file("build/tmp/generateMessages/java")
//   customIDL = files("build/tmp/generateMessages/ros2-common-interfaces")
//
//   doLast {
//      copy {
//         from "build/tmp/generateMessages/java/controller_msgs"
//         into "src/main/generated-java/controller_msgs"
//      }
//   }
//}
