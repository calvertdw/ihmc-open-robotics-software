


#ifndef __controller_msgs__msg__QuixMotionStateMessage__idl__
#define __controller_msgs__msg__QuixMotionStateMessage__idl__




module controller_msgs
{
  module msg
  {
    module dds
    {

   
   const octet HOLD_POSITION =

      0;



   
   const octet SIT_DOWN =

      1;



   
   const octet STAND_UP =

      2;



   
<<<<<<< HEAD
   const octet MOVE_TO_FLAT_GROUND =
=======
   const octet MOVE_TO_START =
>>>>>>> develop

      3;



   
   const octet FLAT_GROUND_WALKING =

      4;



   
<<<<<<< HEAD
   const octet MOVE_TO_SLOPE =

      5;



   
   const octet SLOPE_WALKING =

      6;



   
   const octet OLD_FLAT_GROUND_WALKING =

      7;



   
   /**
   
    * This message is part of the Quix controller API.
   
    * This message is used to notify the crutch display of the current motion state and allow the crutch to communicate a desired change in state.
=======
   /**
   
    * This message is part of the IHMC whole-body controller API.
   
    * This message is used to switch the control scheme between different control mode.
>>>>>>> develop
   
    */
   
   @TypeCode(type="controller_msgs::msg::dds_::QuixMotionStateMessage_")
      struct QuixMotionStateMessage
      {


    
    /**
    
     * Unique ID used to identify this message, should preferably be consecutively increasing.
    
     */
    


    unsigned long sequence_id;


    
<<<<<<< HEAD
=======
    /**
    
     * Specifies the which state the controller should transition into.
    
     */
    
>>>>>>> develop

    @defaultValue(value=255)

        octet motion_state_name;



      };

    };
  };
};

#endif
