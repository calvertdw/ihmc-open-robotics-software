#ifndef __controller_msgs__msg__QuadrupedFootstepPlanningRequestPacket__idl__
#define __controller_msgs__msg__QuadrupedFootstepPlanningRequestPacket__idl__

#include "controller_msgs/msg/./PlanarRegionsListMessage_.idl"
#include "geometry_msgs/msg/./Point_.idl"
#include "geometry_msgs/msg/./Quaternion_.idl"
module controller_msgs
{
  module msg
  {
    module dds
    {
      const octet ROBOT_QUADRANT_FRONT_LEFT =
      0;

      const octet ROBOT_QUADRANT_FRONT_RIGHT =
      1;

      const octet ROBOT_QUADRANT_HIND_LEFT =
      2;

      const octet ROBOT_QUADRANT_HIND_RIGHT =
      3;

      const long NO_PLAN_ID =
      -1;

      const octet FOOTSTEP_PLANNER_TYPE_SIMPLE_PATH_TURN_WALK_TURN =
      0;

      const octet FOOTSTEP_PLANNER_TYPE_VIS_GRAPH_WITH_TURN_WALK_TURN =
      1;

      const octet FOOTSTEP_PLANNER_TYPE_A_STAR =
      2;


      /**
       * This message is part of the IHMC quadruped footstep planning module.
       */
      @TypeCode(type="controller_msgs::msg::dds_::QuadrupedFootstepPlanningRequestPacket_")
      struct QuadrupedFootstepPlanningRequestPacket
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        @defaultValue(value=255)
        octet initial_step_robot_quadrant;
        geometry_msgs::msg::dds::Point body_position_in_world;
        geometry_msgs::msg::dds::Quaternion body_orientation_in_world;
        geometry_msgs::msg::dds::Point goal_position_in_world;
        geometry_msgs::msg::dds::Quaternion goal_orientation_in_world;
        @defaultValue(value=-1)
        long planner_request_id;
        @defaultValue(value=255)
        octet requested_footstep_planner_type;
        double timeout;
        double horizon_length;
        controller_msgs::msg::dds::PlanarRegionsListMessage planar_regions_list_message;
        boolean assume_flat_ground;
      };
    };
  };
};

#endif
